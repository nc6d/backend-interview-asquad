server:
  port: 8282

spring:
  application:
    name: demo

  jpa:
    database: postgresql
    generate-ddl: false
    open-in-view: false
    hibernate:
      ddl-auto: create-drop
#      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
          use_get_generated_keys: true

  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/demo
    username: root
    password: root

  data:
    mongodb:
      host: 127.0.0.1
      port: 27017
      username: root
      password: root
      database: report
      auto-index-creation: false
      authentication-database: admin

  kafka:
    client-id: ${spring.application.name}
    bootstrap-servers: 127.0.0.1:9094
    consumer:
      client-id: ${spring.application.name}-consumer
      group-id: ${spring.application.name}-consumer-group
      auto-offset-reset: latest
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      type: single
      ack-mode: record
      concurrency: 4

  rabbitmq:
    listener:
      type: simple
      simple:
        acknowledge-mode: manual
        prefetch: 1
        concurrency: 2
        max-concurrency: 8
    host: rabbitmq