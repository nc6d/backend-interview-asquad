services:

  postgres:
    image: postgres:11.8
    hostname: postgres
    restart: unless-stopped
    stop_grace_period: 20s
    labels:
      group: infra
    command:
      - -c
      - max_connections=1000
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=demo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 10s
      timeout: 10s
      retries: 100
      start_period: 10s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: unless-stopped
    environment:
      ZOO_MY_ID: 1
      ZOO_ENABLE_AUTH: "no"
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "127.0.0.1:2181:2181"
    healthcheck:
      test: [ "CMD", "nc", "-z", "127.0.0.1", "2181" ]
      interval: 10s
      timeout: 10s
      retries: 100
      start_period: 10s

  kafka:
    image: confluentinc/cp-enterprise-kafka:7.4.4
    restart: unless-stopped
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,CLIENT://kafka:9094
      KAFKA_LISTENERS: INTERNAL://:9092,CLIENT://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_BYTES: "-1"
      KAFKA_LOG_RETENTION_HOURS: "72"
      KAFKA_MAX_REQUEST_SIZE: "2097152"
      KAFKA_MESSAGE_MAX_BYTES: "2097152"
      KAFKA_HEAP_OPTS: "-Xms256M -Xmx256M"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "10000"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: "10000"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=WARN,kafka.request.logger=WARN"
    ports:
      - "127.0.0.1:9094:9094"
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "127.0.0.1:9094" ]
      interval: 10s
      timeout: 10s
      retries: 100
      start_period: 10s

  kowl:
    image: quay.io/cloudhut/kowl:v1.5.0
    restart: on-failure
    hostname: kowl
    volumes:
      - "./docker/kowl/config.yaml:/etc/kowl/config.yaml:delegated"
    ports:
      - "127.0.0.1:9097:8080"
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      - kafka

  rabbitmq:
    image: rabbitmq:3.9-management
    restart: unless-stopped
    ports:
      - "127.0.0.1:15672:15672"
      - "127.0.0.1:5671:5671"
      - "127.0.0.1:5672:5672"
    healthcheck:
      interval: 10s
      timeout: 10s
      retries: 100
      start_period: 10s
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"

  mongodb:
    restart: unless-stopped
    image: mongo:4.2
    environment:
      MONGO_ROOT_USERNAME: root
      MONGO_ROOT_PASSWORD: root
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: report
    ports:
      - "127.0.0.1:27017:27017"
    healthcheck:
      test: "mongo -u root -p root --eval 'rs.status()'"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s